<Window
  x:Class="AsyncTaskExecutorApp.MainWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:asyncTaskExecutorApp="clr-namespace:AsyncTaskExecutorApp"
  xmlns:controls="clr-namespace:AsyncTaskExecutor.Controls;assembly=AsyncTaskExecutor"
  xmlns:tasks="clr-namespace:AsyncTaskExecutor.Tasks;assembly=AsyncTaskExecutor"
  xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
  xmlns:markups="clr-namespace:AsyncTaskExecutor.Markups;assembly=AsyncTaskExecutor"
  mc:Ignorable="d" Title="MainWindow" Height="450" Width="800"
  d:DataContext="{d:DesignInstance asyncTaskExecutorApp:ViewModel}">
  
  <Window.Resources>
    <Style TargetType="Button" x:Key="AsyncTaskButton">
      <Setter Property="Height" Value="16"/>
      <Setter Property="Width" Value="16"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>
    
    <DataTemplate x:Key="AsyncTaskTemplate" DataType="tasks:IAsyncTaskComponent">
      <Border Background="LightGray" d:DataContext="{d:DesignInstance tasks:IAsyncTaskComponent}" BorderBrush="Black" BorderThickness="1">
        <Grid Margin="3">
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <controls:CircularProgressBar x:Name="CircularProgressBar" Grid.Column="0" Margin="0,2,2,2" 
                                          IsPaused="{markups:BoolBinding Executor.Status, Value={x:Static tasks:AsyncTaskExecutionStatus.Paused}}"
                                          ToolTip="{Binding Executor.BusyStatus}"/>
            <TextBlock Grid.Column="1" x:Name="BusyStatus" VerticalAlignment="Center" Margin="3,0"
                       Text="{Binding Executor.BusyStatus}" ToolTip="{Binding Executor.BusyStatus}"/>
            <Button Grid.Column="2" Command="{Binding CancelCommand}" Style="{StaticResource AsyncTaskButton}"
                    ToolTip="{markups:ToolTipBinding Executor.TaskName, StringFormat={}Cancel {0}}">
              <Image Source="/Resources/cancel.png"/>
            </Button>
            <Button Grid.Column="3" Command="{Binding PauseResumeCommand}" Style="{StaticResource AsyncTaskButton}"
                    ToolTip="{markups:ToolTipBinding Executor.TaskName, StringFormat={}Pause {0}}">
              <Image x:Name="PauseResume" Source="/Resources/pause.png"/>
            </Button>
          </Grid>
          <ProgressBar Grid.Row="1" Value="{Binding Progress.Progress, Mode=OneWay}" Minimum="0" Maximum="100"/>
        </Grid>
      </Border>
      <DataTemplate.Triggers>
        <DataTrigger Binding="{Binding Executor.Status}" Value="{x:Static tasks:AsyncTaskExecutionStatus.Paused}">
          <Setter TargetName="PauseResume" Property="Source" Value="/Resources/resume.png"/>
          <Setter TargetName="PauseResume" Property="ToolTip" Value="{markups:ToolTipBinding Executor.TaskName, StringFormat={}Resume {0}}"/>
          <Setter TargetName="CircularProgressBar" Property="ToolTip" Value="Paused"/>
          <Setter TargetName="BusyStatus" Property="Text" Value="Paused"/>
        </DataTrigger>
      </DataTemplate.Triggers>
    </DataTemplate>
  </Window.Resources>
  
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Button Command="{Binding AsyncLoad.ExecuteCommand}"
            Width="150" Height="30" HorizontalAlignment="Center" Content="Load">
      <b:Interaction.Behaviors>
        <controls:AsyncTaskUi AsyncTaskComponent="{Binding AsyncLoad}" Template="{StaticResource AsyncTaskTemplate}"/>
      </b:Interaction.Behaviors>
    </Button>
  </Grid>
  
</Window>